{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ritik\\\\OneDrive\\\\Desktop\\\\Highfy\\\\react-chat\\\\src\\\\chat\\\\ChannelList.js\";\nimport React from 'react';\nimport Channel from './Channel';\nimport \"./ChannelList.css\";\n\nconst ChannelList = props => {\n  const handleClick = id => {\n    props.onSelectChannel(id);\n  };\n\n  let list = /*#__PURE__*/React.createElement(\"div\", {\n    className: \"no-content-message\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 16\n    }\n  }, \"There is no channels to show\");\n\n  if (props.channels && props.channels.map) {\n    list = props.channels.map(c => /*#__PURE__*/React.createElement(Channel, {\n      key: c.id,\n      id: c.id,\n      name: c.name,\n      participants: c.participants,\n      onClick: handleClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 40\n      }\n    }));\n  }\n\n  async function connect() {\n    document.getElementById('connect-button').addEventListener('click', event => {\n      let account;\n      let button = event.target;\n      window.ethereum.request({\n        method: 'eth_requestAccounts'\n      }).then(accounts => {\n        account = accounts[0];\n        console.log(account);\n        button.textContent = account;\n        window.ethereum.request({\n          method: 'eth_getBalance',\n          params: [account, 'latest']\n        }).then(result => {\n          let wei = parseInt(result, 16);\n          let balance = wei / 10 ** 18;\n          console.log(balance + \" ETH\");\n        });\n      });\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"channel-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, list, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: connect,\n    id: \"connect-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }\n  }, \" Connect to metamask\"));\n};\n\nexport default ChannelList;","map":{"version":3,"names":["React","Channel","ChannelList","props","handleClick","id","onSelectChannel","list","channels","map","c","name","participants","connect","document","getElementById","addEventListener","event","account","button","target","window","ethereum","request","method","then","accounts","console","log","textContent","params","result","wei","parseInt","balance"],"sources":["C:/Users/ritik/OneDrive/Desktop/Highfy/react-chat/src/chat/ChannelList.js"],"sourcesContent":["import React from 'react';\r\nimport Channel  from './Channel';\r\nimport \"./ChannelList.css\"\r\n\r\nconst ChannelList =(props)=>{\r\n\r\n    const handleClick = (id) => {\r\n        props.onSelectChannel(id);\r\n    }\r\n    let list = <div className=\"no-content-message\">There is no channels to show</div>;\r\n    if (props.channels && props.channels.map) {\r\n        list = props.channels.map(c => <Channel key={c.id} id={c.id} name={c.name} participants={c.participants} onClick={handleClick} />);\r\n    }\r\n    async function connect(){\r\n  \r\n        document.getElementById('connect-button').addEventListener('click', event => {\r\n          let account;\r\n          let button = event.target;\r\n          window.ethereum.request({method: 'eth_requestAccounts'}).then(accounts => {\r\n            account = accounts[0];\r\n            console.log(account);\r\n            button.textContent = account;\r\n      \r\n            window.ethereum.request({method: 'eth_getBalance' , params: [account, 'latest']}).then(result => {\r\n              \r\n              let wei = parseInt(result,16);\r\n              let balance = wei / (10**18);\r\n              console.log(balance + \" ETH\");\r\n            });\r\n          });\r\n        });\r\n      \r\n      }\r\n    return (\r\n        <div className='channel-list'>\r\n            {list}\r\n            <button onClick={connect} id=\"connect-button\"> Connect to metamask</button>\r\n        </div>\r\n        \r\n        );\r\n    \r\n}\r\nexport default ChannelList;\r\n"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAqB,WAArB;AACA,OAAO,mBAAP;;AAEA,MAAMC,WAAW,GAAGC,KAAD,IAAS;EAExB,MAAMC,WAAW,GAAIC,EAAD,IAAQ;IACxBF,KAAK,CAACG,eAAN,CAAsBD,EAAtB;EACH,CAFD;;EAGA,IAAIE,IAAI,gBAAG;IAAK,SAAS,EAAC,oBAAf;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,kCAAX;;EACA,IAAIJ,KAAK,CAACK,QAAN,IAAkBL,KAAK,CAACK,QAAN,CAAeC,GAArC,EAA0C;IACtCF,IAAI,GAAGJ,KAAK,CAACK,QAAN,CAAeC,GAAf,CAAmBC,CAAC,iBAAI,oBAAC,OAAD;MAAS,GAAG,EAAEA,CAAC,CAACL,EAAhB;MAAoB,EAAE,EAAEK,CAAC,CAACL,EAA1B;MAA8B,IAAI,EAAEK,CAAC,CAACC,IAAtC;MAA4C,YAAY,EAAED,CAAC,CAACE,YAA5D;MAA0E,OAAO,EAAER,WAAnF;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,EAAxB,CAAP;EACH;;EACD,eAAeS,OAAf,GAAwB;IAEpBC,QAAQ,CAACC,cAAT,CAAwB,gBAAxB,EAA0CC,gBAA1C,CAA2D,OAA3D,EAAoEC,KAAK,IAAI;MAC3E,IAAIC,OAAJ;MACA,IAAIC,MAAM,GAAGF,KAAK,CAACG,MAAnB;MACAC,MAAM,CAACC,QAAP,CAAgBC,OAAhB,CAAwB;QAACC,MAAM,EAAE;MAAT,CAAxB,EAAyDC,IAAzD,CAA8DC,QAAQ,IAAI;QACxER,OAAO,GAAGQ,QAAQ,CAAC,CAAD,CAAlB;QACAC,OAAO,CAACC,GAAR,CAAYV,OAAZ;QACAC,MAAM,CAACU,WAAP,GAAqBX,OAArB;QAEAG,MAAM,CAACC,QAAP,CAAgBC,OAAhB,CAAwB;UAACC,MAAM,EAAE,gBAAT;UAA4BM,MAAM,EAAE,CAACZ,OAAD,EAAU,QAAV;QAApC,CAAxB,EAAkFO,IAAlF,CAAuFM,MAAM,IAAI;UAE/F,IAAIC,GAAG,GAAGC,QAAQ,CAACF,MAAD,EAAQ,EAAR,CAAlB;UACA,IAAIG,OAAO,GAAGF,GAAG,GAAI,MAAI,EAAzB;UACAL,OAAO,CAACC,GAAR,CAAYM,OAAO,GAAG,MAAtB;QACD,CALD;MAMD,CAXD;IAYD,CAfD;EAiBD;;EACH,oBACI;IAAK,SAAS,EAAC,cAAf;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACK3B,IADL,eAEI;IAAQ,OAAO,EAAEM,OAAjB;IAA0B,EAAE,EAAC,gBAA7B;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,0BAFJ,CADJ;AAQH,CArCD;;AAsCA,eAAeX,WAAf"},"metadata":{},"sourceType":"module"}