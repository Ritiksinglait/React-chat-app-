{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ritik\\\\OneDrive\\\\Desktop\\\\Highfy\\\\react-chat\\\\src\\\\chat\\\\ChannelList.js\";\nimport React from 'react';\nimport Channel from './Channel';\n\nconst ChannelList = props => {\n  handleClick = id => {\n    props.onSelectChannel(id);\n  };\n\n  let list = /*#__PURE__*/React.createElement(\"div\", {\n    className: \"no-content-message\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 16\n    }\n  }, \"There is no channels to show\");\n\n  if (props.channels && props.channels.map) {\n    list = this.props.channels.map(c => /*#__PURE__*/React.createElement(Channel, {\n      key: c.id,\n      id: c.id,\n      name: c.name,\n      participants: c.participants,\n      onClick: props.handleClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 45\n      }\n    }));\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"channel-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }\n  }, list);\n};\n\nexport default ChannelList;","map":{"version":3,"names":["React","Channel","ChannelList","props","handleClick","id","onSelectChannel","list","channels","map","c","name","participants"],"sources":["C:/Users/ritik/OneDrive/Desktop/Highfy/react-chat/src/chat/ChannelList.js"],"sourcesContent":["import React from 'react';\r\nimport Channel  from './Channel';\r\n\r\nconst ChannelList =(props)=>{\r\n\r\n    handleClick = id => {\r\n        props.onSelectChannel(id);\r\n    }\r\n\r\n    \r\n\r\n    let list = <div className=\"no-content-message\">There is no channels to show</div>;\r\n    if (props.channels && props.channels.map) {\r\n        list = this.props.channels.map(c => <Channel key={c.id} id={c.id} name={c.name} participants={c.participants} onClick={props.handleClick} />);\r\n    }\r\n    return (\r\n        <div className='channel-list'>\r\n            {list}\r\n        </div>\r\n        \r\n        );\r\n    \r\n\r\n}\r\nexport default ChannelList;"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAqB,WAArB;;AAEA,MAAMC,WAAW,GAAGC,KAAD,IAAS;EAExBC,WAAW,GAAGC,EAAE,IAAI;IAChBF,KAAK,CAACG,eAAN,CAAsBD,EAAtB;EACH,CAFD;;EAMA,IAAIE,IAAI,gBAAG;IAAK,SAAS,EAAC,oBAAf;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,kCAAX;;EACA,IAAIJ,KAAK,CAACK,QAAN,IAAkBL,KAAK,CAACK,QAAN,CAAeC,GAArC,EAA0C;IACtCF,IAAI,GAAG,KAAKJ,KAAL,CAAWK,QAAX,CAAoBC,GAApB,CAAwBC,CAAC,iBAAI,oBAAC,OAAD;MAAS,GAAG,EAAEA,CAAC,CAACL,EAAhB;MAAoB,EAAE,EAAEK,CAAC,CAACL,EAA1B;MAA8B,IAAI,EAAEK,CAAC,CAACC,IAAtC;MAA4C,YAAY,EAAED,CAAC,CAACE,YAA5D;MAA0E,OAAO,EAAET,KAAK,CAACC,WAAzF;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,EAA7B,CAAP;EACH;;EACD,oBACI;IAAK,SAAS,EAAC,cAAf;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACKG,IADL,CADJ;AAQH,CApBD;;AAqBA,eAAeL,WAAf"},"metadata":{},"sourceType":"module"}